// @generated
// This file is automatically generated by Kanel. Do not modify manually.

import { z } from 'zod';

/** Identifier type for country */
export type CountryId = number & { __flavor?: 'CountryId' };

/** Represents the table public.country */
export default interface Country {
  /** Database type: pg_catalog.int4 */
  country_id: CountryId;

  /** Database type: pg_catalog.varchar */
  country: string;

  /** Database type: pg_catalog.timestamp */
  last_update: Date;
}

/** Represents the initializer for the table public.country */
export interface CountryInitializer {
  /**
   * Database type: pg_catalog.int4
   * Default value: nextval('country_country_id_seq'::regclass)
   */
  country_id?: CountryId;

  /** Database type: pg_catalog.varchar */
  country: string;

  /**
   * Database type: pg_catalog.timestamp
   * Default value: now()
   */
  last_update?: Date;
}

/** Represents the mutator for the table public.country */
export interface CountryMutator {
  /** Database type: pg_catalog.int4 */
  country_id?: CountryId;

  /** Database type: pg_catalog.varchar */
  country?: string;

  /** Database type: pg_catalog.timestamp */
  last_update?: Date;
}

export const countryId = z.number() as unknown as z.Schema<CountryId>;

export const country = z.object({
  country_id: countryId,
  country: z.string(),
  last_update: z.date(),
}) as unknown as z.Schema<Country>;

export const countryInitializer = z.object({
  country_id: countryId.optional(),
  country: z.string(),
  last_update: z.date().optional(),
}) as unknown as z.Schema<CountryInitializer>;

export const countryMutator = z.object({
  country_id: countryId.optional(),
  country: z.string().optional(),
  last_update: z.date().optional(),
}) as unknown as z.Schema<CountryMutator>;
