// @generated
// This file is automatically generated by Kanel. Do not modify manually.

import { z } from 'zod';

/** Identifier type for category */
export type CategoryId = number & { __flavor?: 'CategoryId' };

/** Represents the table public.category */
export default interface Category {
  /** Database type: pg_catalog.int4 */
  category_id: CategoryId;

  /** Database type: pg_catalog.varchar */
  name: string;

  /** Database type: pg_catalog.timestamp */
  last_update: Date;
}

/** Represents the initializer for the table public.category */
export interface CategoryInitializer {
  /**
   * Database type: pg_catalog.int4
   * Default value: nextval('category_category_id_seq'::regclass)
   */
  category_id?: CategoryId;

  /** Database type: pg_catalog.varchar */
  name: string;

  /**
   * Database type: pg_catalog.timestamp
   * Default value: now()
   */
  last_update?: Date;
}

/** Represents the mutator for the table public.category */
export interface CategoryMutator {
  /** Database type: pg_catalog.int4 */
  category_id?: CategoryId;

  /** Database type: pg_catalog.varchar */
  name?: string;

  /** Database type: pg_catalog.timestamp */
  last_update?: Date;
}

export const categoryId = z.number() as unknown as z.Schema<CategoryId>;

export const category = z.object({
  category_id: categoryId,
  name: z.string(),
  last_update: z.date(),
}) as unknown as z.Schema<Category>;

export const categoryInitializer = z.object({
  category_id: categoryId.optional(),
  name: z.string(),
  last_update: z.date().optional(),
}) as unknown as z.Schema<CategoryInitializer>;

export const categoryMutator = z.object({
  category_id: categoryId.optional(),
  name: z.string().optional(),
  last_update: z.date().optional(),
}) as unknown as z.Schema<CategoryMutator>;
